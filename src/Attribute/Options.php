<?php

declare(strict_types=1);

namespace ADS\Bundle\ApiPlatformEventEngineBundle\Attribute;

use ApiPlatform\Metadata\CollectionOperationInterface;
use ApiPlatform\Metadata\HttpOperation;
use ApiPlatform\Metadata\Parameters;
use ApiPlatform\OpenApi\Attributes\Webhook;
use ApiPlatform\OpenApi\Model\Operation as OpenApiOperation;
use ApiPlatform\State\OptionsInterface;
use Attribute;
use Stringable;

// phpcs:disable
#[Attribute(Attribute::TARGET_CLASS | Attribute::IS_REPEATABLE)]
final class Options extends HttpOperation implements CollectionOperationInterface
{
    public function __construct(
        string|null $uriTemplate = null,
        array|null $types = null,
        $formats = null,
        $inputFormats = null,
        $outputFormats = null,
        $uriVariables = null,
        string|null $routePrefix = null,
        string|null $routeName = null,
        array|null $defaults = null,
        array|null $requirements = null,
        array|null $options = null,
        bool|null $stateless = null,
        string|null $sunset = null,
        string|null $acceptPatch = null,
        $status = null,
        string|null $host = null,
        array|null $schemes = null,
        string|null $condition = null,
        string|null $controller = null,
        array|null $headers = null,
        array|null $cacheHeaders = null,
        array|null $paginationViaCursor = null,
        array|null $hydraContext = null,
        array|null $openapiContext = null,
        bool|OpenApiOperation|Webhook|null $openapi = null,
        array|null $exceptionToStatus = null,
        bool|null $queryParameterValidationEnabled = null,
        array|null $links = null,
        string|null $shortName = null,
        string|null $class = null,
        bool|null $paginationEnabled = null,
        string|null $paginationType = null,
        int|null $paginationItemsPerPage = null,
        int|null $paginationMaximumItemsPerPage = null,
        bool|null $paginationPartial = null,
        bool|null $paginationClientEnabled = null,
        bool|null $paginationClientItemsPerPage = null,
        bool|null $paginationClientPartial = null,
        bool|null $paginationFetchJoinCollection = null,
        bool|null $paginationUseOutputWalkers = null,
        array|null $order = null,
        string|null $description = null,
        array|null $normalizationContext = null,
        array|null $denormalizationContext = null,
        bool|null $collectDenormalizationErrors = null,
        string|Stringable|null $security = null,
        string|null $securityMessage = null,
        string|Stringable|null $securityPostDenormalize = null,
        string|null $securityPostDenormalizeMessage = null,
        string|Stringable|null $securityPostValidation = null,
        string|null $securityPostValidationMessage = null,
        string|null $deprecationReason = null,
        array|null $filters = null,
        array|null $validationContext = null,
        $input = null,
        $output = null,
        $mercure = null,
        $messenger = null,
        bool|null $elasticsearch = null,
        int|null $urlGenerationStrategy = null,
        bool|null $read = null,
        bool|null $deserialize = null,
        bool|null $validate = null,
        bool|null $write = null,
        bool|null $serialize = null,
        bool|null $fetchPartial = null,
        bool|null $forceEager = null,
        int|null $priority = null,
        string|null $name = null,
        $provider = null,
        $processor = null,
        OptionsInterface|null $stateOptions = null,
        array|Parameters|null $parameters = null,
        array $extraProperties = [],
        private string|null $itemUriTemplate = null,
    ) {
        parent::__construct(
            method: 'OPTIONS',
            uriTemplate: $uriTemplate,
            types: $types,
            formats: $formats,
            inputFormats: $inputFormats,
            outputFormats: $outputFormats,
            uriVariables: $uriVariables,
            routePrefix: $routePrefix,
            routeName: $routeName,
            defaults: $defaults,
            requirements: $requirements,
            options: $options,
            stateless: $stateless,
            sunset: $sunset,
            acceptPatch: $acceptPatch,
            status: $status,
            host: $host,
            schemes: $schemes,
            condition: $condition,
            controller: $controller,
            headers: $headers,
            cacheHeaders: $cacheHeaders,
            paginationViaCursor: $paginationViaCursor,
            hydraContext: $hydraContext,
            openapiContext: $openapiContext,
            openapi: $openapi,
            exceptionToStatus: $exceptionToStatus,
            queryParameterValidationEnabled: $queryParameterValidationEnabled,
            links: $links,
            shortName: $shortName,
            class: $class,
            paginationEnabled: $paginationEnabled,
            paginationType: $paginationType,
            paginationItemsPerPage: $paginationItemsPerPage,
            paginationMaximumItemsPerPage: $paginationMaximumItemsPerPage,
            paginationPartial: $paginationPartial,
            paginationClientEnabled: $paginationClientEnabled,
            paginationClientItemsPerPage: $paginationClientItemsPerPage,
            paginationClientPartial: $paginationClientPartial,
            paginationFetchJoinCollection: $paginationFetchJoinCollection,
            paginationUseOutputWalkers: $paginationUseOutputWalkers,
            order: $order,
            description: $description,
            normalizationContext: $normalizationContext,
            denormalizationContext: $denormalizationContext,
            collectDenormalizationErrors: $collectDenormalizationErrors,
            security: $security,
            securityMessage: $securityMessage,
            securityPostDenormalize: $securityPostDenormalize,
            securityPostDenormalizeMessage: $securityPostDenormalizeMessage,
            securityPostValidation: $securityPostValidation,
            securityPostValidationMessage: $securityPostValidationMessage,
            deprecationReason: $deprecationReason,
            filters: $filters,
            validationContext: $validationContext,
            input: $input,
            output: $output,
            mercure: $mercure,
            messenger: $messenger,
            elasticsearch: $elasticsearch,
            urlGenerationStrategy: $urlGenerationStrategy,
            read: $read,
            deserialize: $deserialize,
            validate: $validate,
            write: $write,
            serialize: $serialize,
            fetchPartial: $fetchPartial,
            forceEager: $forceEager,
            priority: $priority,
            name: $name,
            provider: $provider,
            processor: $processor,
            parameters: $parameters,
            extraProperties: $extraProperties,
            stateOptions: $stateOptions,
        );
    }
}
